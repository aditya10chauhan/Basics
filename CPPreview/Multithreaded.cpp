
// 1. Intro

// 1. Intro -----------------------------------------------------------------------------------
#include "stdafx.h"
#include <iostream>
#include <thread>

void do_smth() {
	std::cout << "Action No1" << std::endl;
}
void do_smth_else() {
	std::cout << "Action No2" << std::endl;
}

struct background_task{
	void operator()() const{
		do_smth();
		do_smth_else();
	}
};

int main()
{
	std::thread thread_two(do_smth);           // std::thread works with any callable type
	thread_two.join();

	background_task t;
	std::thread thread_three(t);
	thread_three.join();

	std::thread thread_four{ background_task() };
	thread_four.join();

	std::thread thread_five([]() {
		do_smth();
		do_smth_else(); } );
	thread_five.join();

	std::cin.get();
}
//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------
