/* 1. Array Sum / Vector sum
 * 2. Lambda with std::count_if
 * 3. Convert decimal number to binary (recursive)
 */
 
// 1. Array Sum-------------------------------------------------------------------------------
int myArr[] = { 1, 10, 100, 1000 };

int sum = 0;
std::for_each(std::begin(myArr), std::end(myArr), [&sum](int a) { return sum += a; });

int sum2 = std::accumulate(std::begin(myArr), std::end(myArr), 0);

// 1. VectorSum-------------------------------------------------------------------------------
std::vector<int> myVector;
for (int i = 1; i <= 5; i++) myVector.push_back(i);

int sum = 0;
std::for_each(myVector.begin(), myVector.end(), [&sum](int a) { return sum += a; });

int sum2 = std::accumulate(myVector.begin(), myVector.end(), 0);  //0.0f for floats
//--------------------------------------------------------------------------------------------

// 2. Lambda with count_if--------------------------------------------------------------------
// to count number of elements which are equal to my own parameter 'myMax'
std::vector<int> ar({ 3, 2, 1, 3 });
auto myMax = *std::max_element(ar.begin(), ar.end());
auto myCount = std::count_if(ar.begin(), ar.end(), [myMax](int i) { return i == myMax; });
//--------------------------------------------------------------------------------------------

// 3. Convert decimal number to binary (recursive)--------------------------------------------
void convertToBinary(unsigned int n)
{
	if (n / 2 != 0) {
		convertToBinary(n / 2);
	}
	printf("%d", n % 2);
}
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------

// 1. Array Sum-------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
